//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Keyboardandmouse"",
            ""id"": ""3daa1e18-8724-4c80-bf38-05b2b0b51b9e"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""45d49960-a306-4552-ae05-da066366e3a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""3c1c4344-db06-48de-b850-7ffb710e63c0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Value"",
                    ""id"": ""3a12fb3f-3f1a-42ba-9a81-6712febfa8c7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UIcontroller"",
                    ""type"": ""Value"",
                    ""id"": ""2f716682-ea37-4564-941b-441f6cafb998"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UIselect"",
                    ""type"": ""Button"",
                    ""id"": ""e4a77ac4-91f9-432e-8541-a5c768a12751"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCameraX"",
                    ""type"": ""Button"",
                    ""id"": ""27177d21-30aa-4000-b735-e4b27358a490"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCameraY"",
                    ""type"": ""Button"",
                    ""id"": ""83bcc571-8de4-4beb-899f-2370cf897e12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""288323e7-3c4b-4135-a93e-2dd149d1f91f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""5c1c6f95-51c7-4757-bf05-b3dfc1259861"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""2a3b0c3d-6e5d-4f76-810c-8957c8ab4915"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""bb909b7c-a93f-4128-aedc-ad7975fae8c4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""1efc7215-1544-4f12-b8b6-375326712699"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""82c310c0-b4cd-478a-864b-1b0e84d06def"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""b800b6d4-8fe6-4a5c-b750-574397a4e6a2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""e408e46c-9774-4c64-b4ec-4996874c1547"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""46b36d89-4cf8-4cc8-8ff3-eb36843d5a33"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""08152783-b02e-472d-98be-69db7e788a0b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""e1bb2469-6d80-47a1-9f02-eca316f92282"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""696e247d-3aa1-43ef-803d-2998ac460b3d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c5af768a-9a22-4949-8ec6-e9e3cf395320"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""70038f58-dffa-41e5-bb22-8f176a43c22f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""69462d41-e5f3-47f0-a6c3-3202d9912ba6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIcontroller"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6df18d10-6f49-492c-8ae0-ab03bce35f55"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""UIcontroller"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""95c56b07-34fb-44f6-9bb8-a93b2b750576"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""UIcontroller"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a6b7c6a9-be8b-4d94-843b-cbce44aac046"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""UIselect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2539de7-5d30-4749-a502-a047f3c116c0"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""UIselect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0757690c-a1a0-4192-bd89-d0d4597cfbfe"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCameraX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4d1e4d8-2108-41d7-ac1c-3feb3bf627e1"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCameraY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardAndMouse"",
            ""bindingGroup"": ""KeyboardAndMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Keyboardandmouse
        m_Keyboardandmouse = asset.FindActionMap("Keyboardandmouse", throwIfNotFound: true);
        m_Keyboardandmouse_Jump = m_Keyboardandmouse.FindAction("Jump", throwIfNotFound: true);
        m_Keyboardandmouse_Movement = m_Keyboardandmouse.FindAction("Movement", throwIfNotFound: true);
        m_Keyboardandmouse_RotateCamera = m_Keyboardandmouse.FindAction("RotateCamera", throwIfNotFound: true);
        m_Keyboardandmouse_UIcontroller = m_Keyboardandmouse.FindAction("UIcontroller", throwIfNotFound: true);
        m_Keyboardandmouse_UIselect = m_Keyboardandmouse.FindAction("UIselect", throwIfNotFound: true);
        m_Keyboardandmouse_RotateCameraX = m_Keyboardandmouse.FindAction("RotateCameraX", throwIfNotFound: true);
        m_Keyboardandmouse_RotateCameraY = m_Keyboardandmouse.FindAction("RotateCameraY", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboardandmouse
    private readonly InputActionMap m_Keyboardandmouse;
    private IKeyboardandmouseActions m_KeyboardandmouseActionsCallbackInterface;
    private readonly InputAction m_Keyboardandmouse_Jump;
    private readonly InputAction m_Keyboardandmouse_Movement;
    private readonly InputAction m_Keyboardandmouse_RotateCamera;
    private readonly InputAction m_Keyboardandmouse_UIcontroller;
    private readonly InputAction m_Keyboardandmouse_UIselect;
    private readonly InputAction m_Keyboardandmouse_RotateCameraX;
    private readonly InputAction m_Keyboardandmouse_RotateCameraY;
    public struct KeyboardandmouseActions
    {
        private @PlayerInputActions m_Wrapper;
        public KeyboardandmouseActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Keyboardandmouse_Jump;
        public InputAction @Movement => m_Wrapper.m_Keyboardandmouse_Movement;
        public InputAction @RotateCamera => m_Wrapper.m_Keyboardandmouse_RotateCamera;
        public InputAction @UIcontroller => m_Wrapper.m_Keyboardandmouse_UIcontroller;
        public InputAction @UIselect => m_Wrapper.m_Keyboardandmouse_UIselect;
        public InputAction @RotateCameraX => m_Wrapper.m_Keyboardandmouse_RotateCameraX;
        public InputAction @RotateCameraY => m_Wrapper.m_Keyboardandmouse_RotateCameraY;
        public InputActionMap Get() { return m_Wrapper.m_Keyboardandmouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardandmouseActions set) { return set.Get(); }
        public void SetCallbacks(IKeyboardandmouseActions instance)
        {
            if (m_Wrapper.m_KeyboardandmouseActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnJump;
                @Movement.started -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnMovement;
                @RotateCamera.started -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnRotateCamera;
                @RotateCamera.performed -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnRotateCamera;
                @RotateCamera.canceled -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnRotateCamera;
                @UIcontroller.started -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnUIcontroller;
                @UIcontroller.performed -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnUIcontroller;
                @UIcontroller.canceled -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnUIcontroller;
                @UIselect.started -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnUIselect;
                @UIselect.performed -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnUIselect;
                @UIselect.canceled -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnUIselect;
                @RotateCameraX.started -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnRotateCameraX;
                @RotateCameraX.performed -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnRotateCameraX;
                @RotateCameraX.canceled -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnRotateCameraX;
                @RotateCameraY.started -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnRotateCameraY;
                @RotateCameraY.performed -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnRotateCameraY;
                @RotateCameraY.canceled -= m_Wrapper.m_KeyboardandmouseActionsCallbackInterface.OnRotateCameraY;
            }
            m_Wrapper.m_KeyboardandmouseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @RotateCamera.started += instance.OnRotateCamera;
                @RotateCamera.performed += instance.OnRotateCamera;
                @RotateCamera.canceled += instance.OnRotateCamera;
                @UIcontroller.started += instance.OnUIcontroller;
                @UIcontroller.performed += instance.OnUIcontroller;
                @UIcontroller.canceled += instance.OnUIcontroller;
                @UIselect.started += instance.OnUIselect;
                @UIselect.performed += instance.OnUIselect;
                @UIselect.canceled += instance.OnUIselect;
                @RotateCameraX.started += instance.OnRotateCameraX;
                @RotateCameraX.performed += instance.OnRotateCameraX;
                @RotateCameraX.canceled += instance.OnRotateCameraX;
                @RotateCameraY.started += instance.OnRotateCameraY;
                @RotateCameraY.performed += instance.OnRotateCameraY;
                @RotateCameraY.canceled += instance.OnRotateCameraY;
            }
        }
    }
    public KeyboardandmouseActions @Keyboardandmouse => new KeyboardandmouseActions(this);
    private int m_KeyboardAndMouseSchemeIndex = -1;
    public InputControlScheme KeyboardAndMouseScheme
    {
        get
        {
            if (m_KeyboardAndMouseSchemeIndex == -1) m_KeyboardAndMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardAndMouse");
            return asset.controlSchemes[m_KeyboardAndMouseSchemeIndex];
        }
    }
    public interface IKeyboardandmouseActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnRotateCamera(InputAction.CallbackContext context);
        void OnUIcontroller(InputAction.CallbackContext context);
        void OnUIselect(InputAction.CallbackContext context);
        void OnRotateCameraX(InputAction.CallbackContext context);
        void OnRotateCameraY(InputAction.CallbackContext context);
    }
}
